# .github/workflows/reusable-workflow.yml
name: Reusable Terraform Workflow

on:
  workflow_call:
    inputs:
      environment:
        description: "The environment (e.g., dev or prod)"
        required: true
        type: string
      terraform_action:
        description: "The Terraform action (plan, apply, destroy)"
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        description: "AWS Access Key ID"
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: "AWS Secret Access Key"
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      # Step 1: Checkout the repo
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Use the required Terraform version

      # Step 3: Set up AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Specify the region

      # Step 4: Initialize Terraform in the given environment
      - name: Initialize Terraform
        run: |
          cd infrastructure/environments/${{ inputs.environment }}
          terraform init

      # Step 5: Terraform Plan
      - name: Terraform Plan
        if: ${{ inputs.terraform_action == 'plan' || inputs.terraform_action == 'apply' }}
        run: |
          cd infrastructure/environments/${{ inputs.environment }}
          terraform plan -out=tfplan

      # Step 6: Terraform Apply
      - name: Terraform Apply
        if: ${{ inputs.terraform_action == 'apply' }}
        run: |
          cd infrastructure/environments/${{ inputs.environment }}
          terraform apply -auto-approve tfplan

      # Step 7: Terraform Destroy
      - name: Terraform Destroy
        if: ${{ inputs.terraform_action == 'destroy' }}
        run: |
          cd infrastructure/environments/${{ inputs.environment }}
          terraform destroy -auto-approve
